@using Presentation.Devices.Shared.DeviceStates
@using Presentation.Utils;

@inject IStringLocalizer<DeviceElement> _localizer
@inject IUnusedDeviceService _unusedDeviceService

<MudPaper Class="m-0 p-0 rounded-4 animate-simple" Elevation="1">
    <MudGrid Class="m-0 p-0 w-100">
        <MudItem xs="12" Class="m-0 p-0">
            <MudPaper Elevation="2" Class="m-0 p-1 rounded-4">
                <MudGrid Class="m-0 p-0 w-100" Justify="Justify.SpaceBetween">
                    <MudItem xs="2" sm="3" Class="m-0 p-2 d-flex justify-content-center align-items-center">
                        <MudPaper Elevation="5"
                                  Class="m-0 p-1 rounded-5"
                                  Style="@($"background-color: {GetBackgroundColor()};")">
                            <MudIcon Class="list-icon"
                                     Icon="@IconUtils.GetIcon(Device.Icon?.Name!)" />
                        </MudPaper>
                    </MudItem>

                    <MudItem Class="m-0 p-0 d-flex justify-content-center align-items-center">
                        <MudText Typo="Typo.h6" Class="hide-overlapping-text text-600">
                            @Device.Name
                        </MudText>
                    </MudItem>

                    <MudItem Class="m-0 p-0 d-flex justify-content-center align-items-center">
                        <MudIconButton Class="z-10"
                                       Style="margin-right: 0.5rem!important;"
                                       Icon="@IconUtils.DefaultEditIcon"
                                       Variant="Variant.Filled"
                                       OnClick="() => DevicePagesUtils.UpdateDevice(Device, _dialogService)" />

                        <MudIconButton Class="z-10"
                                       Style="margin-right: 0.5rem!important;"
                                       Icon="@IconUtils.DefaultRemoveIcon"
                                       Variant="Variant.Filled"
                                       OnClick="() => DevicePagesUtils.RemoveDevice(Device, _dialogService, _navigationManager)" />
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudPaper>

@code
{
    [Parameter]
    public Device Device { get; set; } = default!;

    public string GetBackgroundColor() => string.IsNullOrEmpty(Device.Icon.BackgroundHex) ? ThemeColors.ColorPrimary : Device.Icon.BackgroundHex;
}
