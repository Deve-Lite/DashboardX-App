@using Presentation.Controls;
@inject IStringLocalizer<StateDialog> _localizer;
@inject IClientService _clientService;

@inherits BaseDialog

<MudDialog>
    <DialogContent>
        <MudGrid Class="p-0 m-0 w-100">

            <MudItem xs="6">
                <MudButton Color="Color.Error"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Filled.TvOff"
                           OnClick="() => SubmitState(false)">
                    @_localizer["Off"]
                </MudButton>
            </MudItem>

            <MudItem xs="6">
                <MudButton Color="Color.Success"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Filled.LiveTv"
                           OnClick="() => SubmitState(true)">
                    @_localizer["On"]
                </MudButton>
            </MudItem>

        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel"
                   Variant="Variant.Filled"
                   Color="Color.Warning">@_localizer["Cancel"]</MudButton>

        <MudButton OnClick="RemoveStateControl"
                   Variant="Variant.Filled"
                   Color="Color.Error">@_localizer["Remove"]</MudButton>

        <MudButton OnClick="async() => await ControlPagesUtils.UpdateControl(_dialogService, Control!, Client!.Id)"
                   Variant="Variant.Filled"
                   Color="Color.Primary">@_localizer["Edit"] </MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [Parameter]
    public Control? Control { get; set; }

    [Parameter]
    public Client? Client { get; set; }

    [Parameter]
    public Action? RerenderPage { get; set; }

    private void SubmitState(bool onPayload) => Dialog!.Close(DialogResult.Ok(onPayload));

    public async Task RemoveStateControl()
    {
        var removed = await ControlPagesUtils.RemoveControl(_dialogService, Control!, Client!.Id);

        if (removed)
        {
            Cancel();
            RerenderPage?.Invoke();
        }
    }
}