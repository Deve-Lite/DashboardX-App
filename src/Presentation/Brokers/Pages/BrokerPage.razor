@page "/brokers/{BrokerId}"

@using Presentation.Controls.Implementations.StateComponents
@using Presentation.Devices;
@using Presentation.Brokers;
@using Presentation.Utils;
@using Presentation.Controls.Implementations;

@inject IClientService _clientService
@inject IStringLocalizer<BrokerPage> _localizer

@implements IDisposable

@inherits BasePage

<PageLoading FailedToLoad="!LoadedSuccessfully">
    <FailedToLoadContent>
        <RefreshPageButton RefreshPage="LoadPage" />
    </FailedToLoadContent>
    <LoadedContent>
        <MudGrid Class="m-0 p-3 w-100">

            <MudItem xs="6" Class="p-0 pt-3 pb-3 m-0 mt-1">

                <MudButton OnClick="async() => await _runtime.GoBack()"
                           Color="Color.Dark"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Filled.ArrowBackIos">
                    @_localizer["Back"]
                </MudButton>

            </MudItem>
            <MudItem xs="6" Class="d-flex p-0 pt-3 pb-3 m-0 justify-content-end">

                <MudButton OnClick="() => DevicePagesUtils.AddDevice(StateHasChanged, _dialogService, _localizer, Client!.Id)"
                           Color="Color.Primary"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Filled.AddToQueue">
                    @_localizer["Add Device"]
                </MudButton>

            </MudItem>

            <MudItem xs="12" sm="12" md="9" lg="7" xl="5" xxl="4" Class="p-0 m-0 pt-4 pb-5 mud-w-auto">
                <MudCard Elevation="5"
                         Class="m-0 p-4 rounded-2">
                    <MudCardContent Class="m-0 p-0">
                        <MudGrid Class="p-0 m-0 w-100">

                            <MudItem xs="12">
                                <MudText Typo="Typo.h6" Class="hide-overlapping-text">
                                    @Client!.Broker.Name
                                </MudText>
                            </MudItem>

                            <MudItem xs="12" Class="p-0 m-0">
                                <MudText Typo="Typo.button" Class="p-1 pl-0 m-0">
                                    @_localizer["Server"]
                                </MudText>
                                <MudText Class="hide-overlapping-text">
                                    @Client!.Broker.Server
                                </MudText>
                            </MudItem>

                            <MudItem xs="6" sm="5" md="4" lg="3" xl="2" Class="p-0 m-0">
                                <MudText Typo="Typo.button" Class="p-1 pl-0 m-0">
                                    @_localizer["Port"]
                                </MudText>

                                <MudText Class="hide-overlapping-text">
                                    @Client!.Broker.Port
                                </MudText>
                            </MudItem>

                            <MudItem xs="6" sm="5" md="4" lg="3" xl="2" xxl="1" Class="p-0 m-0">
                                <MudText Typo="Typo.button" Class="p-1 pl-0 m-0">
                                    @_localizer["Keep Alive"]
                                </MudText>
                                <MudText Class="hide-overlapping-text">
                                    @Client!.Broker.KeepAlive
                                </MudText>
                            </MudItem>

                            <MudItem xs="12" sm="5" md="4" lg="3" xl="2" Class="p-0 m-0">

                                <MudText Typo="Typo.button" Class="p-1 pl-0 m-0">
                                    @_localizer["Client Id"]
                                </MudText>

                                <MudText Class="hide-overlapping-text">
                                    @Client!.Broker.ClientId
                                </MudText>
                            </MudItem>

                        </MudGrid>
                    </MudCardContent>

                    <MudItem xs="12" Class="p-0 pt-2 pb-2 m-0">
                        <MudProgressLinear Size="Size.Small" Color="Color.Tertiary" Rounded="true" Value="100" />
                    </MudItem>

                    <MudCardActions Class="p-0 m-0">
                        <MudButton Class="z-10 m-0"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   OnClick="() => BrokerPagesUtils.UpdateBroker(Client!, _dialogService, StateHasChanged, _localizer)">
                            @_localizer["Edit"]
                        </MudButton>

                        <MudButton Class="z-10 m-0 ml-2 mr-2"
                                   Variant="Variant.Filled"
                                   Color="Color.Error"
                                   OnClick="() => BrokerPagesUtils.RemoveBroker(Client!, _dialogService, StateHasChanged, _localizer)">
                            @_localizer["Delete"]
                        </MudButton>

                        <BrokerConnectionSwitch Client="Client" />

                    </MudCardActions>
                </MudCard>
            </MudItem>

            <MudItem Class="p-0 pt-2" xs="12">
                <MudList Class="p-0 w-100"
                         Dense="true"
                         Clickable="true">

                    <MudListSubheader Class="d-flex p-0 m-0">
                        <MudGrid Class="p-0 m-0">
                            <MudItem xs="1" Class="d-flex p-1 m-0">

                            </MudItem>
                            <MudItem xs="2" Class="d-flex p-1 m-0 align-items-center justify-content-start">
                                <MudText Typo="Typo.h6">
                                    @_localizer["Name"]
                                </MudText>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex p-1 m-0 align-items-center justify-content-start">
                                <MudText Typo="Typo.h6">
                                    @_localizer["Placing"]
                                </MudText>
                            </MudItem>
                            <MudItem xs="2" Class="d-flex p-1 m-0 align-items-center justify-content-start">
                                <MudText Typo="Typo.h6">
                                    @_localizer["Path"]
                                </MudText>
                            </MudItem>
                            <MudItem xs="3" Class="d-flex p-1 m-0 align-items-center justify-content-center">

                            </MudItem>
                            <MudItem xs="2"> </MudItem>
                        </MudGrid>

                    </MudListSubheader>

                    <MudProgressLinear Size="Size.Small" Color="Color.Primary" Rounded="true" Value="100" />

                    @foreach (var device in Client!.Devices)
                    {
                        <MudListItem Class="d-flex m-0 p-0 pt-1 pb-1 align-items-center justify-content-center"
                                     Href="@($"/devices/{device.Id}/{BrokerId}")">
                            <MudGrid Class="w-100 p-0 m-0">
                                <MudItem xs="1" Class="d-flex p-0 m-0 align-items-center justify-content-center">

                                    <IconForList Icon="@device.Icon"
                                                 IconSize="Size.Medium" />

                                </MudItem>
                                <MudItem xs="2" Class="d-flex m-0 p-0 align-items-center justify-content-start">
                                    <MudText Class="hide-overlapping-text">
                                        @device.Name
                                    </MudText>
                                </MudItem>
                                <MudItem xs="2" Class="d-flex m-0 p-0 align-items-center justify-content-start">
                                    <MudText Class="hide-overlapping-text">
                                        @device.Placing
                                    </MudText>
                                </MudItem>
                                <MudItem xs="2" Class="d-flex m-0 p-0 align-items-center justify-content-start">
                                    <MudText Class="hide-overlapping-text">
                                        @(string.IsNullOrEmpty(device.BaseDevicePath) ? _localizer["No path."] : device.BaseDevicePath)
                                    </MudText>
                                </MudItem>
                                <MudItem xs="3" Class="d-flex m-0 p-0 align-items-center justify-content-center">

                                    <StateControl Client="Client" Device="device" RerenderPage="StateHasChanged" />

                                </MudItem>
                                <MudItem xs="2" Class="d-flex m-0 p-0 align-items-center justify-content-evenly">
                                    <MudIconButton Class="z-10"
                                                   Icon="@IconUtils.DefaultEditIcon"
                                                   OnClick="() => DevicePagesUtils.UpdateDevice(device, _dialogService, StateHasChanged, _localizer)">

                                    </MudIconButton>

                                    <MudIconButton Class="z-10"
                                                   Icon="@IconUtils.DefaultRemoveIcon"
                                                   OnClick="() => DevicePagesUtils.RemoveDevice(device, _dialogService, _localizer, _navigationManager, _runtime)">

                                    </MudIconButton>
                                </MudItem>
                            </MudGrid>
                        </MudListItem>

                        <MudProgressLinear Size="Size.Small" Color="Color.Primary" Rounded="true" Value="0" />
                    }
                </MudList>
            </MudItem>
        </MudGrid>
    </LoadedContent>
</PageLoading>

@code
{
    [Parameter]
    public string BrokerId { get; set; } = string.Empty;

    private Client? Client { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadPage();
        await base.OnInitializedAsync();
    }

    public async Task LoadPage()
    {
        if (_loadingService.IsLoading)
            return;

        _loadingService.ShowLoading();

        var result = await _clientService.GetClient(BrokerId);

        if (result.Succeeded)
        {
            Client = result.Data;
            Client!.RerenderPage += Rerender;
            LoadedSuccessfully = true;
        }
        else
        {
            LoadedSuccessfully = false;
        }

        if (result.ShowToast)
            foreach (var message in result.Messages)
                _snackbar.Add(message, result.Severity);

        _loadingService.HideLoading();

        StateHasChanged();
    }

    public void Dispose()
    {
#pragma warning disable CS8601
        Client!.RerenderPage -= Rerender;
    }

    private Task Rerender()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }

    public void NavigateToDevice(Device device)
    {
        _navigationManager.NavigateTo($"/devices/{device.Id}/{BrokerId}");
    }
}
