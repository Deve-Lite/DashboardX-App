@using Presentation.Shared.Dialogs

@inject IStringLocalizer<TextControlDialog> _localizer;
@inject IClientService _clientService;

@inherits BaseDialog

<MudDialog ClassContent="my-mud-dialog-content">
    <DialogContent>
        <LoadingDialog>
            <Title>
                <MudText Align="Align.Start"
                         Typo="Typo.h6">
                    @_localizer["Previewing value on topic"]
                </MudText>
            </Title>
            <Content>
                <MudText Typo="Typo.body1">
                    @_localizer["Topic:"] @Topic
                </MudText>
                <MudText Inline="false" Typo="Typo.body2">
                    @Value
                </MudText>
            </Content>
            <Actions>
                <MudButton OnClick="Cancel"
                           ButtonType="ButtonType.Submit"
                           Variant="Variant.Filled"
                           Color="Color.Primary">@_localizer["Ok"] </MudButton>
            </Actions>
        </LoadingDialog>
    </DialogContent>
</MudDialog>

@code
{
    [Parameter]
    public Client? Client { get; set; }

    [Parameter]
    public Device? Device { get; set; }

    [Parameter]
    public Control? Control { get; set; }

    private string Value { get; set; } = string.Empty;
    private string Topic { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Topic = Control!.GetTopic(Device!);
        Value = await Client!.TopicService.LastMessageOnTopicAsync(Client.Id, Device!, Control!);

        if (string.IsNullOrEmpty(Value))
            Value = "No message or message was empty.";
    }
}