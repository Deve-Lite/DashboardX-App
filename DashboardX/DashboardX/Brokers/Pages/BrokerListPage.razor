@page "/brokers"
@using Microsoft.AspNetCore.Authorization;
@inject IClientService _clientService;
@attribute [Authorize]

@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <p>TODO: Loading Gif</p>
    </div>
}
else if (LoadingFailed)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <p>Fetching data failed. Please Try again</p>
    </div>
}
else
{
    foreach(var broker in Brokers)
    {
        
    }
}


@code {
    private bool IsProcessing { get; set; } = false;
    private bool LoadingFailed { get; set; } = false;
    private IList<InitializedBroker> Brokers { get; set; } = new List<InitializedBroker>();

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;

        var initializedBrokers = await _clientService.GetInitializedBrokers();

        if (_clientService.UpdatedSuccessfully)
        {
            Brokers = initializedBrokers;
            LoadingFailed = false;
        }
        else
            LoadingFailed = true;

        IsProcessing = false;
    }

    private async Task RefreshBrokers()
    {
        IsProcessing = true;

        var initializedBrokers = await _clientService.GetInitializedBrokers();

        if (_clientService.UpdatedSuccessfully)
        {
            Brokers = initializedBrokers;
            LoadingFailed = false;
        }
        else
            LoadingFailed = true;

        IsProcessing = false;
    }
}
