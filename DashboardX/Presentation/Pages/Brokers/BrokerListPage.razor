@page "/brokers"
@using Presentation.Models;

@inject IClientService _clientService


@if (_loadingService.IsLoading)
{

}
else if (!LoadedSuccessfully)
{
    <div>Loadin Failed...</div>
}
else
{
    <MudGrid>
        @foreach (var client in BrokerClients)
        {
            <MudItem>
                <MudCard Elevation="25" Class="container container-fit-content p-5" style="border-radius: 1rem; max-width 25rem;">
                    <MudText Align="Align.Center"> @client.Broker.Name </MudText>
                    <MudText>Server: @client.Broker.Server </MudText>
                    <MudText>Port: @client.Broker.Port </MudText>
                    <MudText>Keep Alive: @client.Broker.KeepAlive </MudText>
                    <MudText Align="Align.End">Edited At: @client.Broker.EditedAt </MudText>
                </MudCard>
            </MudItem>
        }

         <MudItem >
                <MudCard Elevation="25" Class="container container-fit-content p-5" style="border-radius: 1rem; ">
                    <MudText Align="Align.Center"> Add new  </MudText>
                </MudCard>
            </MudItem>

    </MudGrid>
}


@code {

    public bool LoadedSuccessfully { get; set; } = true;
    private List<BrokerClient> BrokerClients { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (_loadingService.IsLoading)
            return;

        _loadingService.ShowLoading();

        var result = await _clientService.GetBrokers();
        LoadedSuccessfully = result.Succeeded;
        if (result.Succeeded)
        {
            BrokerClients = result.Data;
        }

        _loadingService.HideLoading();
    }
}
